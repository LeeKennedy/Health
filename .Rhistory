panel.grid.major.y=element_line(colour="gray", size=.1),
legend.position="none")
ggplot(df,aes(x=time, y=data)) +
geom_point()
ggplot(df,aes(x=time, y=steps)) +
geom_bar() +
xlab("") +ylab("steps") +
theme(axis.ticks.x=element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.background=element_blank(),
panel.grid.major.y=element_line(colour="gray", size=.1),
legend.position="none")
df <- get_sleep_data(cookie, start_date="2015-02-01", end_date="2015-02-14")
#  Needs work #
library("ggplot2")
ggplot(df) + geom_bar(aes(x=time, y=steps), stat="identity") +
xlab("") +ylab("steps") +
theme(axis.ticks.x=element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.background=element_blank(),
panel.grid.major.y=element_line(colour="gray", size=.1),
legend.position="none")
#devtools::install_github("corynissen/fitbitScraper")
#devtools::install_github("corynissen/fitbitScraper", ref="dev")
library("fitbitScraper")
# just reading from file to hide pw and to make .Rmd document to work...
mypassword <- as.character("1yKVO7HW6TJL")
cookie <- login(email="mail@leekennedy.id.au", password="1yKVO7HW6TJL")
# Get 15min data ------------------------------------------------------------------------
df <- get_intraday_data(cookie, what="steps", date="2015-05-08")
library("ggplot2")
ggplot(df) + geom_bar(aes(x=time, y=data, fill=data), stat="identity") +
xlab("") +ylab("steps") +
theme(axis.ticks.x=element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.background=element_blank(),
panel.grid.major.y=element_line(colour="gray", size=.1),
legend.position="none")
#### Daily Data -------------------------------------------------
df <- get_daily_data(cookie, what="steps", start_date="2015-11-01", end_date="2015-11-16")
write.csv(df,"dailysteps.csv", row.names=FALSE)
library("ggplot2")
ggplot(df) + geom_bar(aes(x=time, y=data), stat="identity") +
xlab("") +ylab("steps") +
theme(axis.ticks.x=element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.background=element_blank(),
panel.grid.major.y=element_line(colour="gray", size=.1),
legend.position="none")
# Get sleep data ----------------------------------------------------------------------------
df <- get_sleep_data(cookie, start_date="2015-02-01", end_date="2015-02-14")
#  Needs work #
library("ggplot2")
ggplot(df) + geom_bar(aes(x=time, y=steps), stat="identity") +
xlab("") +ylab("steps") +
theme(axis.ticks.x=element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.background=element_blank(),
panel.grid.major.y=element_line(colour="gray", size=.1),
legend.position="none")
df <- get_daily_data(cookie, what="steps", start_date="2015-11-01", end_date="2015-11-16")
write.csv(df,"dailysteps.csv", row.names=FALSE)
library("ggplot2")
ggplot(df) + geom_bar(aes(x=time, y=data), stat="identity") +
xlab("") +ylab("steps") +
theme(axis.ticks.x=element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.background=element_blank(),
panel.grid.major.y=element_line(colour="gray", size=.1),
legend.position="none")
ggplot(df) + geom_bar(aes(x=time, y=steps), stat="identity") +
xlab("") +ylab("steps") +
theme(axis.ticks.x=element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.background=element_blank(),
panel.grid.major.y=element_line(colour="gray", size=.1),
legend.position="none")
df <- get_intraday_data(cookie, what="steps", date="2015-05-08")
library("ggplot2")
ggplot(df) + geom_bar(aes(x=time, y=steps, fill=data), stat="identity") +
xlab("") +ylab("steps") +
theme(axis.ticks.x=element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.background=element_blank(),
panel.grid.major.y=element_line(colour="gray", size=.1),
legend.position="none")
ggplot(df) + geom_bar(aes(x=time, y=steps), stat="identity") +
xlab("") +ylab("steps") +
theme(axis.ticks.x=element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.background=element_blank(),
panel.grid.major.y=element_line(colour="gray", size=.1),
legend.position="none")
ggplot(df) + geom_bar(aes(x=time, y=steps)) +
xlab("") +ylab("steps") +
theme(axis.ticks.x=element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.background=element_blank(),
panel.grid.major.y=element_line(colour="gray", size=.1),
legend.position="none")
ggplot(df) + geom_bar(aes(x=time, y=steps), stat="identity") +
xlab("") +ylab("steps") +
theme(axis.ticks.x=element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.background=element_blank(),
panel.grid.major.y=element_line(colour="gray", size=.1),
legend.position="none")
#### Daily Data -------------------------------------------------
df <- get_daily_data(cookie, what="steps", start_date="2015-11-01", end_date="2015-11-16")
write.csv(df,"dailysteps.csv", row.names=FALSE)
library("ggplot2")
ggplot(df) + geom_bar(aes(x=time, y=steps), stat="identity") +
xlab("") +ylab("steps") +
theme(axis.ticks.x=element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.background=element_blank(),
panel.grid.major.y=element_line(colour="gray", size=.1),
legend.position="none")
#### Daily Data -------------------------------------------------
df <- get_daily_data(cookie, what="steps", start_date="2015-11-01", end_date="2015-11-16")
write.csv(df,"dailysteps.csv", row.names=FALSE)
library("ggplot2")
ggplot(df) + geom_bar(aes(x=time, y=steps), stat="identity") +
xlab("") +ylab("steps") +
theme(axis.ticks.x=element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.background=element_blank(),
panel.grid.major.y=element_line(colour="gray", size=.1),
legend.position="none")
library(ggplot2)
library(readxl)
weight <- read_excel("Healthcheck.xlsx", sheet=1)
#weight <- read.csv("Healthcheck.csv", header = TRUE)
weight1 <- weight[,c(1,8)]
weight1 <- na.omit(weight1)
weight2 <- weight1[1600:nrow(weight1),]
weight3 <- weight[,c(4,8)]
weight3 <- na.omit(weight3)
weight4 <-weight[,c(1,8:10)]
height <- 1.89
BMI <- (weight4$Weight)/(height^2)
w2h <- weight4$Waist/weight4$Hips
weight5 <- cbind(weight4, BMI,w2h)
dev.off()
#Weight over 2015 (-ish)
ggplot(weight2, aes(Index,Weight)) +
geom_point(shape = 21, fill = "cornflowerblue", colour = "blue", size = 4) +
geom_smooth(method=loess, colour = "darkgreen") +
ggtitle("Weight") +
ylim(85,98) +
theme_bw()
tail(weight2)
#Weight over longer time
ggplot(weight1, aes(Index,Weight)) +
geom_point(shape = 21, fill = "cornflowerblue", colour = "blue", size = 4) +
geom_smooth(colour = "darkgreen") +
ggtitle("Weight") +
ylim(85,105) +
theme_bw()
colors = c(rep("cornflowerblue",9),rep("limegreen",1))
boxplot(Weight ~ Year,
data = weight3,
col = colors)
abline(h=94, lty=2, col="red")
#Waist to Hip Ratio
ggplot(weight5[2400:nrow(weight5),], aes(x = Index, y = w2h)) +
geom_point() +
geom_smooth(colour = "darkgreen") +
ggtitle("Waist to Hip Ratio")
#Waist to Hip Ratio
ggplot(weight5[2400:nrow(weight5),], aes(x = Index, y = w2h)) +
geom_point(shape = 21, fill = "cornflowerblue", colour = "blue", size = 4) +
geom_smooth(colour = "darkgreen") +
ggtitle("Waist to Hip Ratio")
#Waist to Hip Ratio
ggplot(weight5[2400:nrow(weight5),], aes(x = Index, y = w2h)) +
geom_point(shape = 21, fill = "cornflowerblue", colour = "blue", size = 4) +
geom_smooth(colour = "darkgreen") +
ggtitle("Waist to Hip Ratio") +
theme_bw()
#BMI
ggplot(weight5[2000:nrow(weight5),], aes(x = Index, y = BMI)) +
geom_point(shape = 21, fill = "cornflowerblue", colour = "blue", size = 4) +
geom_smooth(colour = "blue") +
ggtitle("BMI") +
geom_abline(slope=0, intercept=25, lty=2, col="red") +
theme_bw()
library(dplyr)
library(ggplot2)
library(lubridate)
library(tidyr)
library(xlsx)
#data <- read.csv("BP.csv", as.is=TRUE, header=TRUE, skip=18)
data <- read.xlsx("Healthcheck.xlsx",2, startRow=19, header=TRUE)
data1 <- select(data, Date, Temp.1, Temp.2, Temp.3)%>%
mutate(Temp.1 = as.numeric(as.character(Temp.1)),
Temp.2 = as.numeric(as.character(Temp.2)),
Temp.3 = as.numeric(as.character(Temp.3)))%>%
mutate(Ave.Temp = (Temp.1 + Temp.2 + Temp.3)/3)%>%
na.omit
data1$Date <- ymd(data1$Date)
data1 <- data1[,c(1:4)]
data3 <- gather(data1, Type, Reading, -Date)
dev.off()
plot <- ggplot(data3, aes(Date, Reading, colour = Type)) +
geom_point(size=4, shape=21) +
geom_smooth(lwd=1) +
scale_colour_brewer(palette="Set1") +
theme_bw() +
theme(panel.grid.major = element_line(size = 0.5, color = "grey"),
axis.line = element_line(size = 0.7, color = "black"),
text = element_text(size = 14))
plot
ww <- read.csv("w2w.csv", as.is= TRUE, header=TRUE)
library(ggplot2)
ww$Waist <- sapply(ww$Waist, as.numeric)
fit <- lm(ww$Waist~ww$Weight)
summary(fit)
ggplot(ww, aes(x=Waist, y=Weight)) +
geom_point(color="blue",size=4, alpha=0.25) +
geom_smooth(method=lm)
library(ggplot2)
library(readxl)
weight <- read_excel("Healthcheck.xlsx", sheet=1)
w2w <- weight[,c(8,9)]
w2w <- na.omit(weight[,c(8,9)])
library(ggplot2)
library(readxl)
weight <- read_excel("Healthcheck.xlsx", sheet=1)
w2w <- na.omit(weight[,c(8,9)])
fit <- lm(w2w$Waist~w2w$Weight)
summary(fit)
ggplot(w2w, aes(x=Waist, y=Weight)) +
geom_point(color="blue",size=4, alpha=0.25) +
geom_smooth(method=lm)
ggplot(w2w, aes(x=Waist, y=Weight)) +
geom_point(shape = 21, fill = "cornflowerblue", colour = "blue", size = 4, alpha=0.25) +
geom_smooth(method=lm)
ggplot(w2w, aes(x=Waist, y=Weight)) +
geom_point(shape = 21, fill = "cornflowerblue", colour = "blue", size = 4, alpha=0.25) +
geom_smooth(method=lm) +
theme_bw()
library("fitbitScraper")
# just reading from file to hide pw and to make .Rmd document to work...
mypassword <- as.character("1yKVO7HW6TJL")
cookie <- login(email="mail@leekennedy.id.au", password="1yKVO7HW6TJL")
# Get 15min data ------------------------------------------------------------------------
df <- get_intraday_data(cookie, what="steps", date="2015-05-08")
library("ggplot2")
ggplot(df) + geom_bar(aes(x=time, y=steps), stat="identity") +
xlab("") +ylab("steps") +
theme(axis.ticks.x=element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.background=element_blank(),
panel.grid.major.y=element_line(colour="gray", size=.1),
legend.position="none")
#### Daily Data -------------------------------------------------
df <- get_daily_data(cookie, what="steps", start_date="2015-11-01", end_date="2015-11-16")
write.csv(df,"dailysteps.csv", row.names=FALSE)
library("ggplot2")
ggplot(df) + geom_bar(aes(x=time, y=steps), stat="identity") +
xlab("") +ylab("steps") +
theme(axis.ticks.x=element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.background=element_blank(),
panel.grid.major.y=element_line(colour="gray", size=.1),
legend.position="none")
#### Daily Data -------------------------------------------------
df <- get_daily_data(cookie, what="steps", start_date="2015-11-01", end_date="2015-11-30")
write.csv(df,"dailysteps.csv", row.names=FALSE)
library("ggplot2")
ggplot(df) + geom_bar(aes(x=time, y=steps), stat="identity") +
xlab("") +ylab("steps") +
theme(axis.ticks.x=element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.background=element_blank(),
panel.grid.major.y=element_line(colour="gray", size=.1),
legend.position="none")
library(ggplot2)
library(readxl)
weight <- read_excel("Healthcheck.xlsx", sheet=1)
#weight <- read.csv("Healthcheck.csv", header = TRUE)
weight1 <- weight[,c(1,8)]
weight1 <- na.omit(weight1)
weight2 <- weight1[1600:nrow(weight1),]
weight3 <- weight[,c(4,8)]
weight3 <- na.omit(weight3)
weight4 <-weight[,c(1,8:10)]
height <- 1.89
BMI <- (weight4$Weight)/(height^2)
w2h <- weight4$Waist/weight4$Hips
weight5 <- cbind(weight4, BMI,w2h)
dev.off()
#Weight over 2015 (-ish)
ggplot(weight2, aes(Index,Weight)) +
geom_point(shape = 21, fill = "cornflowerblue", colour = "blue", size = 4) +
geom_smooth(method=loess, colour = "darkgreen") +
ggtitle("Weight") +
ylim(85,98) +
theme_bw()
#Weight over longer time
ggplot(weight1, aes(Index,Weight)) +
geom_point(shape = 21, fill = "cornflowerblue", colour = "blue", size = 4) +
geom_smooth(colour = "darkgreen") +
ggtitle("Weight") +
ylim(85,105) +
theme_bw()
colors = c(rep("cornflowerblue",9),rep("limegreen",1))
boxplot(Weight ~ Year,
data = weight3,
col = colors)
abline(h=94, lty=2, col="red")
#Waist to Hip Ratio
ggplot(weight5[2400:nrow(weight5),], aes(x = Index, y = w2h)) +
geom_point(shape = 21, fill = "cornflowerblue", colour = "blue", size = 4) +
geom_smooth(colour = "darkgreen") +
ggtitle("Waist to Hip Ratio") +
theme_bw()
#BMI
ggplot(weight5[2000:nrow(weight5),], aes(x = Index, y = BMI)) +
geom_point(shape = 21, fill = "cornflowerblue", colour = "blue", size = 4) +
geom_smooth(colour = "blue") +
ggtitle("BMI") +
geom_abline(slope=0, intercept=25, lty=2, col="red") +
theme_bw()
#Weight over 2015 (-ish)
ggplot(weight2, aes(Index,Weight)) +
geom_point(shape = 21, fill = "cornflowerblue", colour = "blue", size = 4) +
geom_smooth(method=loess, colour = "darkgreen") +
ggtitle("Weight") +
ylim(85,98) +
theme_bw()
#Weight over longer time
ggplot(weight1, aes(Index,Weight)) +
geom_point(shape = 21, fill = "cornflowerblue", colour = "blue", size = 4) +
geom_smooth(colour = "darkgreen") +
ggtitle("Weight") +
ylim(85,105) +
theme_bw()
dev.off()
#Weight over 2015 (-ish)
ggplot(weight2, aes(Index,Weight)) +
geom_point(shape = 21, fill = "cornflowerblue", colour = "blue", size = 4) +
geom_smooth(method=loess, colour = "darkgreen") +
ggtitle("Weight") +
ylim(85,98) +
theme_bw()
tail(weight2)
library(ggplot2)
library(readxl)
weight <- read_excel("Healthcheck.xlsx", sheet=1)
#weight <- read.csv("Healthcheck.csv", header = TRUE)
weight1 <- weight[,c(1,8)]
weight1 <- na.omit(weight1)
weight2 <- weight1[1600:nrow(weight1),]
weight3 <- weight[,c(4,8)]
weight3 <- na.omit(weight3)
weight4 <-weight[,c(1,8:10)]
height <- 1.89
BMI <- (weight4$Weight)/(height^2)
w2h <- weight4$Waist/weight4$Hips
weight5 <- cbind(weight4, BMI,w2h)
dev.off()
#Weight over 2015 (-ish)
ggplot(weight2, aes(Index,Weight)) +
geom_point(shape = 21, fill = "cornflowerblue", colour = "blue", size = 4) +
geom_smooth(method=loess, colour = "darkgreen") +
ggtitle("Weight") +
ylim(85,98) +
theme_bw()
min(weight2$Weight)
#Weight over longer time
ggplot(weight1, aes(Index,Weight)) +
geom_point(shape = 21, fill = "cornflowerblue", colour = "blue", size = 4) +
geom_smooth(colour = "darkgreen") +
ggtitle("Weight") +
ylim(85,105) +
theme_bw()
colors = c(rep("cornflowerblue",9),rep("limegreen",1))
boxplot(Weight ~ Year,
data = weight3,
col = colors)
abline(h=94, lty=2, col="red")
colors = c(rep("cornflowerblue",9),rep("limegreen",1))
boxplot(Weight ~ Year,
data = weight3,
col = colors)
abline(h=93.6, lty=2, col="red")
library(ggplot2)
library(readxl)
weight <- read_excel("Healthcheck.xlsx", sheet=1)
#weight <- read.csv("Healthcheck.csv", header = TRUE)
weight1 <- weight[,c(1,8)]
weight1 <- na.omit(weight1)
weight2 <- weight1[1600:nrow(weight1),]
weight3 <- weight[,c(4,8)]
weight3 <- na.omit(weight3)
weight4 <-weight[,c(1,8:10)]
height <- 1.89
BMI <- (weight4$Weight)/(height^2)
w2h <- weight4$Waist/weight4$Hips
weight5 <- cbind(weight4, BMI,w2h)
dev.off()
#Weight over 2015 (-ish)
ggplot(weight2, aes(Index,Weight)) +
geom_point(shape = 21, fill = "cornflowerblue", colour = "blue", size = 4) +
geom_smooth(method=loess, colour = "darkgreen") +
ggtitle("Weight") +
ylim(85,98) +
theme_bw()
tail(weight2)
weight <- read_excel("Healthcheck.xlsx", sheet=1)
tail(weight2)
weight <- read_excel("Healthcheck.xlsx", sheet=1)
#weight <- read.csv("Healthcheck.csv", header = TRUE)
weight1 <- weight[,c(1,8)]
weight1 <- na.omit(weight1)
weight2 <- weight1[1600:nrow(weight1),]
weight3 <- weight[,c(4,8)]
weight3 <- na.omit(weight3)
weight4 <-weight[,c(1,8:10)]
height <- 1.89
BMI <- (weight4$Weight)/(height^2)
w2h <- weight4$Waist/weight4$Hips
weight5 <- cbind(weight4, BMI,w2h)
dev.off()
#Weight over 2015 (-ish)
ggplot(weight2, aes(Index,Weight)) +
geom_point(shape = 21, fill = "cornflowerblue", colour = "blue", size = 4) +
geom_smooth(method=loess, colour = "darkgreen") +
ggtitle("Weight") +
ylim(85,98) +
theme_bw()
tail(weight)
tail(weight1)
weight <- read_excel("Healthcheck.xlsx", sheet=1)
#weight <- read.csv("Healthcheck.csv", header = TRUE)
weight1 <- weight[,c(1,8)]
weight1 <- na.omit(weight1)
weight2 <- weight1[1600:nrow(weight1),]
weight3 <- weight[,c(4,8)]
weight3 <- na.omit(weight3)
weight4 <-weight[,c(1,8:10)]
height <- 1.89
BMI <- (weight4$Weight)/(height^2)
w2h <- weight4$Waist/weight4$Hips
weight5 <- cbind(weight4, BMI,w2h)
dev.off()
#Weight over 2015 (-ish)
ggplot(weight2, aes(Index,Weight)) +
geom_point(shape = 21, fill = "cornflowerblue", colour = "blue", size = 4) +
geom_smooth(method=loess, colour = "darkgreen") +
ggtitle("Weight") +
ylim(85,98) +
theme_bw()
#Weight over longer time
ggplot(weight1, aes(Index,Weight)) +
geom_point(shape = 21, fill = "cornflowerblue", colour = "blue", size = 4) +
geom_smooth(colour = "darkgreen") +
ggtitle("Weight") +
ylim(85,105) +
theme_bw()
colors = c(rep("cornflowerblue",9),rep("limegreen",1))
boxplot(Weight ~ Year,
data = weight3,
col = colors)
abline(h=93.6, lty=2, col="red")
#Waist to Hip Ratio
ggplot(weight5[2400:nrow(weight5),], aes(x = Index, y = w2h)) +
geom_point(shape = 21, fill = "cornflowerblue", colour = "blue", size = 4) +
geom_smooth(colour = "darkgreen") +
ggtitle("Waist to Hip Ratio") +
theme_bw()
#BMI
ggplot(weight5[2000:nrow(weight5),], aes(x = Index, y = BMI)) +
geom_point(shape = 21, fill = "cornflowerblue", colour = "blue", size = 4) +
geom_smooth(colour = "blue") +
ggtitle("BMI") +
geom_abline(slope=0, intercept=25, lty=2, col="red") +
theme_bw()
