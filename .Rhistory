rm(list=ls())
# Packages ---------------------------------------------------------------
library(readxl)
library(readr)
library(dplyr)
library(tidyr)
library(ggplot2)
# Functions --------------------------------------------------------------
remove_outliers <- function(x, na.rm = TRUE, ...) {
qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
y <- x
y[x < (qnt[1] - H)] <- NA
y[x > (qnt[2] + H)] <- NA
y
}
# Data Input -------------------------------------------------------------
cholesterol <- read_excel("/Users/Study Old/Documents/GitHub/Health/rawdata/Healthcheck.xlsx", sheet=3)
# Clean Up environment ---------------------------------------------------
rm(list=ls())
# Packages ---------------------------------------------------------------
library(readxl)
library(readr)
library(dplyr)
library(tidyr)
library(ggplot2)
# Functions --------------------------------------------------------------
remove_outliers <- function(x, na.rm = TRUE, ...) {
qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
y <- x
y[x < (qnt[1] - H)] <- NA
y[x > (qnt[2] + H)] <- NA
y
}
# Data Input -------------------------------------------------------------
cholesterol <- read_excel("/Users/Study Old/Documents/GitHub/Health/rawdata/Healthcheck.xlsx", sheet= "Tests")
# Data Cleaning ----------------------------------------------------------
cholesterol <- na.omit(cholesterol[,c(1,2,4,5)])
chol_long <- gather(data=cholesterol,key=Type,value=Level,na.rm=FALSE,Chol,HDL,LDL)
chol_plot <- ggplot(chol_long, aes(x=Date, y = Level, group = Type, fill = Type)) +
geom_point(size = 4, shape = 21, colour = "black") +
geom_line(lwd = 1, aes(colour = Type)) +
labs(title = "Cholesterol\n")
chol_plot
cholesterol <- cholesterol %>%
mutate(ratio = LDL/HDL)
ratio_plot <- ggplot(cholesterol, aes(x=Date, y = ratio)) +
geom_point(size = 4, shape = 21, colour = "black", fill = "cornflowerblue") +
geom_line(lwd = 1, aes(colour = "cornflowerblue")) +
labs(title = "Cholesterol- LDL/HDL Ratio\n")
ratio_plot
library(ProjectTemplate)
load.project()
psa <- read_excel("rawdata/Healthcheck.xlsx", sheet="Tests")
psa <- na.omit(psa[,c(1,7)])
psa_plot <- ggplot(psa, aes(x=Date, y = PSA)) +
geom_point(size = 4, shape = 21, fill = "cornflowerblue", colour = "black") +
geom_line(lwd = 1) +
labs(title = "PSA\n") +
scale_y_continuous(limits = c(0,1))
psa_plot
# Clean environment ------------------------------------------------------
rm(list=ls())
# Packages----------------------------------------------------------------
library(ggplot2)
library(readxl)
library(dplyr)
library(lubridate)
library(tidyr)
# Import data ------------------------------------------------------------
data <- read_excel("rawdata/Healthcheck.xlsx",2, skip=18)
data1 <- select(data, Date, Temp1, Temp2, Temp3)%>%
mutate(Temp1 = as.numeric(as.character(Temp1)),
Temp2 = as.numeric(as.character(Temp2)),
Temp3 = as.numeric(as.character(Temp3)))%>%
mutate(Ave.Temp = (Temp1 + Temp2 + Temp3)/3)
data1$Date <- ymd(data1$Date)
data1 <- data1[,c(1:4)]
data1 <- na.omit(data1)
data3 <- gather(data1, Type, Reading, -Date)
dev.off()
# Plot temperature -------------------------------------------------------
plot <- ggplot(data3, aes(Date, Reading, colour = Type)) +
geom_point(size=4, shape=21) +
geom_smooth(lwd=1) +
scale_colour_brewer(palette="Set1") +
theme_bw() +
theme(panel.grid.major = element_line(size = 0.5, color = "grey"),
axis.line = element_line(size = 0.7, color = "black"),
text = element_text(size = 14))
plot
weight <- read_excel("rawdata/Healthcheck.xlsx", sheet=1)
w2w <- na.omit(weight[,c(8,9)])
fit <- lm(w2w$Waist~w2w$Weight)
summary(fit)
ggplot(w2w, aes(x=Waist, y=Weight)) +
geom_point(shape = 21, fill = "cornflowerblue", colour = "blue", size = 4, alpha=0.25) +
geom_smooth(method=loess) +
theme_bw()
# Clean environment ------------------------------------------------------
rm(list=ls())
# Packages----------------------------------------------------------------
library(ggplot2)
library(readxl)
library(dplyr)
library(lubridate)
library(tidyr)
# Import data ------------------------------------------------------------
data <- read_excel("rawdata/Healthcheck.xlsx",2, skip=18)
data2 <- data[,c(1,16)]
data2 <- na.omit(data2)
colnames(data2)[2] <- "Pulse"
data2$Date <- ymd(data2$Date)
# Plot blood pressure ----------------------------------------------------
pulse_plot <- ggplot(data2, aes(Date, Pulse)) +
geom_point(size=4, shape=21, fill = "cornflowerblue") +
geom_smooth(lwd=1) +
geom_hline(yintercept = 50, lty=2,col="red") +
scale_y_continuous(limits = c(40,90)) +
theme_bw() +
theme(panel.grid.major = element_line(size = 0.5, color = "grey"),
axis.line = element_line(size = 0.7, color = "black"),
text = element_text(size = 14))
pulse_plot
pulse_hist <- ggplot(data2, aes(x=Pulse)) +
geom_histogram(binwidth = 1, fill="cornflowerblue", col="darkgreen") +
theme_bw() +
theme(panel.grid.major = element_line(size = 0.5, color = "grey"),
axis.line = element_line(size = 0.7, color = "black"),
text = element_text(size = 14))
pulse_hist
pulse_hist <- ggplot(data2, aes(x=Pulse)) +
geom_histogram(aes(y = ..density..)) +
stat_function(fun = dnorm,
args = list(mean = mean(data2$Pulse), sd = sd(data2$Pulse)),
lwd = 1,
col = 'red')
theme_bw() +
theme(panel.grid.major = element_line(size = 0.5, color = "grey"),
axis.line = element_line(size = 0.7, color = "black"),
text = element_text(size = 14))
pulse_hist
pulse_hist <- ggplot(data2, aes(x=Pulse)) +
geom_histogram(aes(y = ..density..), fill="cornflowerblue", col="darkgreen") +
stat_function(fun = dnorm,
args = list(mean = mean(data2$Pulse), sd = sd(data2$Pulse)),
lwd = 1,
col = 'red')
theme_bw() +
theme(panel.grid.major = element_line(size = 0.5, color = "grey"),
axis.line = element_line(size = 0.7, color = "black"),
text = element_text(size = 14))
pulse_hist
pulse_hist <- ggplot(data2, aes(x=Pulse)) +
geom_histogram(aes(y = ..density..), fill="cornflowerblue", col="darkgreen") +
stat_function(fun = dnorm,
args = list(mean = mean(data2$Pulse), sd = sd(data2$Pulse)),
lwd = 1,
col = 'red') +
theme_bw() +
theme(panel.grid.major = element_line(size = 0.5, color = "grey"),
axis.line = element_line(size = 0.7, color = "black"),
text = element_text(size = 14))
pulse_hist
# Clean environment ------------------------------------------------------
rm(list=ls())
# Packages----------------------------------------------------------------
library(ggplot2)
library(readxl)
library(dplyr)
library(lubridate)
# Import data ------------------------------------------------------------
weight <- read_excel("rawdata/Healthcheck.xlsx", sheet=1)
weight1 <- weight[,c(1,2,8)]
weight1 <- na.omit(weight1)
weight2 <- weight1[1660:nrow(weight1),]
weight3 <- weight[,c(4,8)]
weight3 <- na.omit(weight3)
weight4 <-weight[,c(1,2,8:10)]
height <- 1.88
BMI <- (weight4$Weight)/(height^2)
w2h <- weight4$Waist/weight4$Hips
weight5 <- cbind(weight4, BMI,w2h)
weight5$Age = year(weight5$Date)-1954
weight5$fat <- 1.2*weight5$BMI +0.23*weight5$Age - 16.2
dev.off()
days_x <- nrow(weight2)
# Weight over 2015 (-ish) ------------------------------------------------
weight_2015 <- ggplot(weight2, aes(Date,Weight)) +
geom_rect(aes(ymin = 86, ymax = 88, xmin = weight2$Date[1], xmax = weight2$Date[days_x]), fill = "grey80") +
geom_point(shape = 21, fill = "cornflowerblue", colour = "blue", size = 4) +
geom_smooth(method=loess, colour = "darkgreen") +
labs(title = "Weight, January 2015 onwards", y="kg", x="") +
theme_bw() +
scale_y_continuous(breaks = seq(82, 98, by=1))
weight_2015
# Weight over longer time -------------------------------------------------
all_weight <- ggplot(weight1, aes(Date,Weight)) +
geom_point(shape = 21, fill = "cornflowerblue", colour = "blue", size = 4) +
geom_smooth(colour = "darkgreen") +
ggtitle("Weight") +
ylim(83,105) +
theme_bw()
all_weight
# Boxplots of yearly weight spread ---------------------------------------
colors = c(rep("cornflowerblue",12),rep("limegreen",1))
boxplot(Weight ~ Year,
data = weight3,
ylim = c(83,101),
whisklty = 1,
range = 0,
col = colors)
#Waist to Hip Ratio ------------------------------------------------------
w2h_plot <- ggplot(weight5[1000:nrow(weight5),], aes(x = Date, y = w2h)) +
geom_point(shape = 21, fill = "cornflowerblue", colour = "blue", size = 4) +
geom_smooth(colour = "darkgreen") +
ggtitle("Waist to Hip Ratio") +
geom_abline(slope=0, intercept=0.9, lty=2, col="red") +
theme_bw()
w2h_plot
#Waist to Hip Ratio 2015 -------------------------------------------------
w2h_2015 <- ggplot(weight5[3000:nrow(weight5),], aes(x = Date, y = w2h)) +
geom_point(shape = 21, fill = "cornflowerblue", colour = "blue", size = 4) +
geom_smooth(colour = "darkgreen") +
scale_y_continuous(limits = c(0.88,0.99)) +
ggtitle("Waist to Hip Ratio") +
geom_abline(slope=0, intercept=0.9, lty=2, col="red") +
theme_bw()
w2h_2015
# BMI --------------------------------------------------------------------
bmi_plot <- ggplot(weight5[1000:nrow(weight5),], aes(x = Date, y = BMI)) +
geom_point(shape = 21, fill = "cornflowerblue", colour = "blue", size = 4) +
geom_smooth(colour = "blue") +
ggtitle("BMI") +
scale_y_continuous(limits = c(23, 30)) +
#scale_y_continuous(breaks = seq(23, 30, by=1)) +
geom_abline(slope=0, intercept=24, lty=2, col="blue") +
geom_abline(slope=0, intercept=25, lty=2, col="red") +
theme_bw()
bmi_plot
all_weight <- ggplot(weight1, aes(Date,Weight)) +
geom_point(shape = 21, fill = "cornflowerblue", colour = "blue", size = 4) +
geom_smooth(colour = "darkgreen") +
ggtitle("Weight") +
ylim(83,105) +
theme_bw()
all_weight
# Clean environment ------------------------------------------------------
rm(list=ls())
# Packages----------------------------------------------------------------
library(ggplot2)
library(readxl)
library(dplyr)
library(lubridate)
library(tidyr)
# Import data ------------------------------------------------------------
data <- read_excel("rawdata/Healthcheck.xlsx",2, skip=18)
data2 <- data[,c(1,16)]
data2 <- na.omit(data2)
colnames(data2)[2] <- "Pulse"
data2$Date <- ymd(data2$Date)
# Plot blood pressure ----------------------------------------------------
pulse_plot <- ggplot(data2, aes(Date, Pulse)) +
geom_point(size=4, shape=21, fill = "cornflowerblue") +
geom_smooth(lwd=1) +
geom_hline(yintercept = 50, lty=2,col="red") +
scale_y_continuous(limits = c(40,90)) +
theme_bw() +
theme(panel.grid.major = element_line(size = 0.5, color = "grey"),
axis.line = element_line(size = 0.7, color = "black"),
text = element_text(size = 14))
pulse_plot
pulse_hist <- ggplot(data2, aes(x=Pulse)) +
geom_histogram(aes(y = ..density..), fill="cornflowerblue", col="darkgreen") +
stat_function(fun = dnorm,
args = list(mean = mean(data2$Pulse), sd = sd(data2$Pulse)),
lwd = 1,
col = 'red') +
theme_bw() +
theme(panel.grid.major = element_line(size = 0.5, color = "grey"),
axis.line = element_line(size = 0.7, color = "black"),
text = element_text(size = 14))
pulse_hist
data2$Year <- year(data2$Date)
colors = c(rep("cornflowerblue",4),rep("limegreen",1))
pulse_box <- ggplot(data2, aes(x=Year, y=Pulse, group = Year)) +
geom_boxplot(fill = colors) +
geom_hline(yintercept = 50, lty=2,col="red") +
scale_y_continuous(limits = c(40,90)) +
theme_bw() +
theme(panel.grid.major = element_line(size = 0.5, color = "grey"),
axis.line = element_line(size = 0.7, color = "black"),
text = element_text(size = 14))
pulse_box
# Clean environment ------------------------------------------------------
rm(list=ls())
# Packages----------------------------------------------------------------
library(ggplot2)
library(readxl)
library(dplyr)
library(lubridate)
library(tidyr)
# Import data ------------------------------------------------------------
data <- read_excel("rawdata/Healthcheck.xlsx",2, skip=18)
data1 <- select(data, everything())%>%
mutate(Systolic = as.numeric(as.character(A)),
Diastolic = as.numeric(as.character(B)))
data2 <- data1[,c(1,23,24)]
data2 <- na.omit(data2)
data2$Date <- ymd(data2$Date)
data3 <- gather(data2, Type, Reading, -Date)
# Plot blood pressure ----------------------------------------------------
bp_plot <- ggplot(data3, aes(Date, Reading, colour = Type)) +
geom_point(size=4, shape=21) +
geom_smooth(lwd=1) +
scale_colour_brewer(palette="Set1") +
theme_bw() +
theme(panel.grid.major = element_line(size = 0.5, color = "grey"),
axis.line = element_line(size = 0.7, color = "black"),
text = element_text(size = 14))
bp_plot
# Clean environment ------------------------------------------------------
rm(list=ls())
# Packages----------------------------------------------------------------
library(ggplot2)
library(readxl)
library(dplyr)
library(lubridate)
# Import data ------------------------------------------------------------
weight <- read_excel("rawdata/Healthcheck.xlsx", sheet=1)
weight1 <- weight[,c(1,2,8)]
weight1 <- na.omit(weight1)
weight2 <- weight1[1660:nrow(weight1),]
weight3 <- weight[,c(4,8)]
weight3 <- na.omit(weight3)
weight4 <-weight[,c(1,2,8:10)]
height <- 1.88
BMI <- (weight4$Weight)/(height^2)
w2h <- weight4$Waist/weight4$Hips
weight5 <- cbind(weight4, BMI,w2h)
weight5$Age = year(weight5$Date)-1954
weight5$fat <- 1.2*weight5$BMI +0.23*weight5$Age - 16.2
dev.off()
days_x <- nrow(weight2)
# Weight over 2015 (-ish) ------------------------------------------------
weight_2015 <- ggplot(weight2, aes(Date,Weight)) +
geom_rect(aes(ymin = 86, ymax = 88, xmin = weight2$Date[1], xmax = weight2$Date[days_x]), fill = "grey80") +
geom_point(shape = 21, fill = "cornflowerblue", colour = "blue", size = 4) +
geom_smooth(method=loess, colour = "darkgreen") +
labs(title = "Weight, January 2015 onwards", y="kg", x="") +
theme_bw() +
scale_y_continuous(breaks = seq(82, 98, by=1))
weight_2015
# Weight over longer time -------------------------------------------------
all_weight <- ggplot(weight1, aes(Date,Weight)) +
geom_point(shape = 21, fill = "cornflowerblue", colour = "blue", size = 4) +
geom_smooth(colour = "darkgreen") +
ggtitle("Weight") +
ylim(83,105) +
theme_bw()
all_weight
# Boxplots of yearly weight spread ---------------------------------------
colors = c(rep("cornflowerblue",12),rep("limegreen",1))
boxplot(Weight ~ Year,
data = weight3,
ylim = c(83,101),
whisklty = 1,
range = 0,
col = colors)
#Waist to Hip Ratio ------------------------------------------------------
w2h_plot <- ggplot(weight5[1000:nrow(weight5),], aes(x = Date, y = w2h)) +
geom_point(shape = 21, fill = "cornflowerblue", colour = "blue", size = 4) +
geom_smooth(colour = "darkgreen") +
ggtitle("Waist to Hip Ratio") +
geom_abline(slope=0, intercept=0.9, lty=2, col="red") +
theme_bw()
w2h_plot
#Waist to Hip Ratio 2015 -------------------------------------------------
w2h_2015 <- ggplot(weight5[3000:nrow(weight5),], aes(x = Date, y = w2h)) +
geom_point(shape = 21, fill = "cornflowerblue", colour = "blue", size = 4) +
geom_smooth(colour = "darkgreen") +
scale_y_continuous(limits = c(0.88,0.99)) +
ggtitle("Waist to Hip Ratio") +
geom_abline(slope=0, intercept=0.9, lty=2, col="red") +
theme_bw()
w2h_2015
# BMI --------------------------------------------------------------------
bmi_plot <- ggplot(weight5[1000:nrow(weight5),], aes(x = Date, y = BMI)) +
geom_point(shape = 21, fill = "cornflowerblue", colour = "blue", size = 4) +
geom_smooth(colour = "blue") +
ggtitle("BMI") +
scale_y_continuous(limits = c(23, 30)) +
#scale_y_continuous(breaks = seq(23, 30, by=1)) +
geom_abline(slope=0, intercept=24, lty=2, col="blue") +
geom_abline(slope=0, intercept=25, lty=2, col="red") +
theme_bw()
bmi_plot
# Clean environment ------------------------------------------------------
rm(list=ls())
# Packages----------------------------------------------------------------
library(ggplot2)
library(readxl)
library(dplyr)
library(lubridate)
# Import data ------------------------------------------------------------
weight <- read_excel("rawdata/Healthcheck.xlsx", sheet=1)
weight1 <- weight[,c(1,2,8)]
weight1 <- na.omit(weight1)
weight2 <- weight1[1660:nrow(weight1),]
weight3 <- weight[,c(4,8)]
weight3 <- na.omit(weight3)
weight4 <-weight[,c(1,2,8:10)]
height <- 1.88
BMI <- (weight4$Weight)/(height^2)
w2h <- weight4$Waist/weight4$Hips
weight5 <- cbind(weight4, BMI,w2h)
weight5$Age = year(weight5$Date)-1954
weight5$fat <- 1.2*weight5$BMI +0.23*weight5$Age - 16.2
dev.off()
days_x <- nrow(weight2)
# Weight over 2015 (-ish) ------------------------------------------------
weight_2015 <- ggplot(weight2, aes(Date,Weight)) +
geom_rect(aes(ymin = 86, ymax = 88, xmin = weight2$Date[1], xmax = weight2$Date[days_x]), fill = "grey80") +
geom_point(shape = 21, fill = "cornflowerblue", colour = "blue", size = 4) +
geom_smooth(method=loess, colour = "darkgreen") +
labs(title = "Weight, January 2015 onwards", y="kg", x="") +
theme_bw() +
scale_y_continuous(breaks = seq(82, 98, by=1))
weight_2015
# Weight over longer time -------------------------------------------------
all_weight <- ggplot(weight1, aes(Date,Weight)) +
geom_point(shape = 21, fill = "cornflowerblue", colour = "blue", size = 4) +
geom_smooth(colour = "darkgreen") +
ggtitle("Weight") +
ylim(83,105) +
theme_bw()
all_weight
# Boxplots of yearly weight spread ---------------------------------------
colors = c(rep("cornflowerblue",12),rep("limegreen",1))
boxplot(Weight ~ Year,
data = weight3,
ylim = c(83,101),
whisklty = 1,
range = 0,
col = colors)
#Waist to Hip Ratio ------------------------------------------------------
w2h_plot <- ggplot(weight5[1000:nrow(weight5),], aes(x = Date, y = w2h)) +
geom_point(shape = 21, fill = "cornflowerblue", colour = "blue", size = 4) +
geom_smooth(colour = "darkgreen") +
ggtitle("Waist to Hip Ratio") +
geom_abline(slope=0, intercept=0.9, lty=2, col="red") +
theme_bw()
w2h_plot
#Waist to Hip Ratio 2015 -------------------------------------------------
w2h_2015 <- ggplot(weight5[3000:nrow(weight5),], aes(x = Date, y = w2h)) +
geom_point(shape = 21, fill = "cornflowerblue", colour = "blue", size = 4) +
geom_smooth(colour = "darkgreen") +
scale_y_continuous(limits = c(0.88,0.99)) +
ggtitle("Waist to Hip Ratio") +
geom_abline(slope=0, intercept=0.9, lty=2, col="red") +
theme_bw()
w2h_2015
# BMI --------------------------------------------------------------------
bmi_plot <- ggplot(weight5[1000:nrow(weight5),], aes(x = Date, y = BMI)) +
geom_point(shape = 21, fill = "cornflowerblue", colour = "blue", size = 4) +
geom_smooth(colour = "blue") +
ggtitle("BMI") +
scale_y_continuous(limits = c(23, 30)) +
#scale_y_continuous(breaks = seq(23, 30, by=1)) +
geom_abline(slope=0, intercept=24, lty=2, col="blue") +
geom_abline(slope=0, intercept=25, lty=2, col="red") +
theme_bw()
bmi_plot
# Clean Up environment ---------------------------------------------------
rm(list=ls())
# Packages ---------------------------------------------------------------
library(tidyverse)
library(readxl)
library(lubridate)
# Data Input 1 -------------------------------------------------------------
wt_data <- read_excel("~/Documents/GitHub/Health/rawdata/Healthcheck.xlsx",
sheet = "Daily Data")
# Data Cleaning ----------------------------------------------------------
wt_data2 <- wt_data[, c(1:11)]
wt_data2 <- wt_data2 %>%
filter(Year == 2017)
wt_data3 <- wt_data[, c(1:11)]
# Export Data -------------------------------------------------------
write_csv(wt_data2, "~/Documents/GitHub/Credo/data/wt_data.csv")
write_csv(wt_data3, "~/Documents/GitHub/Credo/data/wt_data_all.csv")
# Data Input 2 -------------------------------------------------------------
bp_data <- read_excel("~/Documents/GitHub/Health/rawdata/Healthcheck.xlsx",
sheet = "BP, Pulse & Temp")
# Data Cleaning ----------------------------------------------------------
bp_data2 <- bp_data[, c(1,14,15)]
bp_data2$Year <- year(bp_data2$Date)
bp_data2 <- bp_data2 %>%
filter(Year == 2018)
bp_data2 <- bp_data2[,c(1,4,2,3)]
colnames(bp_data2)[3] <- "Systolic"
colnames(bp_data2)[4] <- "Diastolic"
bp_data3 <- tidyr::gather(data = bp_data2, key = Reading, value = Value, na.rm = FALSE, Systolic, Diastolic)
# Export Data -------------------------------------------------------
write_csv(bp_data3, "~/Documents/GitHub/Credo/data/bp_data.csv")
# Data Input 3 -------------------------------------------------------------
chol_data <- read_excel("~/Documents/GitHub/Health/rawdata/Healthcheck.xlsx",
sheet = "Tests")
# Data Cleaning ----------------------------------------------------------
chol_data2 <- chol_data[, c(1:8)]
# Export Data -------------------------------------------------------
write_csv(chol_data2, "~/Documents/GitHub/Credo/data/chol_data.csv")
